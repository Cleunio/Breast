# -*- coding: utf-8 -*-
"""Breast..ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eI_CBs1_o74KEXsSqKDs1_u-bXNYFCdo
"""

!pip install scikit-learn --upgrade
!pip install scikit-learn --upgrade
!pip install scikeras --upgrade

import sklearn as sk

from sklearn.model_selection import train_test_split
import pandas as pd
import tensorflow as tf
import scikeras as sc

pd.__version__, sk.__version__, tf.__version__, sc.__version__

from scikeras.wrappers import KerasClassifier
from sklearn.model_selection import cross_val_score
from tensorflow.keras.models import Sequential
from tensorflow.keras import backend as k

X = pd.read_csv('entradas_breast.csv')
y = pd.read_csv('saidas_breast.csv')

def create_net():
  k.clear_session()
  neural_net = Sequential([
    tf.keras.layers.Input(shape=(30,)),
    tf.keras.layers.Dense(units=16, activation='relu', kernel_initializer='random_uniform'),
    tf.keras.layers.Dense(units=16, activation='relu', kernel_initializer='random_uniform'),
    tf.keras.layers.Dense(units=1, activation='sigmoid')])
  optimize = tf.keras.optimizers.Adam(learning_rate=0.001, clipvalue=0.5)
  neural_net.compile(optimizer=optimize, loss='binary_crossentropy', metrics=['binary_accuracy'])
  return neural_net

neural_net = KerasClassifier(model=create_net, epochs=100, batch_size=10)

results = cross_val_score(estimator = neural_net, X = X, y = y, cv=10, scoring='accuracy')

results

results.mean()

results.std()